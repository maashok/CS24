Jump Table
Index 0 = instruction 10
Index 1 = instruction 16
Index 2 = instruction 10
Index 3 = instruction 12
Index 4 = instruction 14
Index 5 = instruction 15

Line by Line Translation
Instructions 1-3 - Set up stack/frame pointers
Instructions 4-5 - %eax = x, %edx = n
Instruction 6 - %edx = index = n - 50
Instruction 7 - Compare: (n - 50) to 5
Instruction 8 - If greater than 5, jump to instruction 16
Instruction 9 - Jump to *jt[index]
Instruction 10 (index 0,2) - %eax = x << 2
Instruction 11 - Jump to Instruction 17
Instruction 12 (index 3) - %eax = (signed)x >> 2
Instruction 13 - Jump to Instruction 17
Instrucrion 14 (index 4) - %eax = x + 2*x
(Fall through)
Instruction 15 (index 5) - %eax = x*x
(Fall through)
Instruction 16 (index 1, default) - %eax = x + 10
Instruction 17 - Finish Up



C Code
int switch_prob(int x, int n)
{
    int result = x;
    switch(n) {
        case 50:
        case 52:
            result <<= 2;
            break; 
        case 53:
            result >>= 2;
            break;
        case 54:
            result *= 3;
        case 55:
            result *= result;
        case 51:        
        default:
            result += 10;
    }
    return result;
}
